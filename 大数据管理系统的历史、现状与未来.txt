[TOC]
#大数据管理系统的历史、现状与未来
##1.摘要
    以软件为中心 --> 以数据为中心
    大数据管理系统：
        数据存储、数据模型、计算模式、查询引擎；
        现状：大数据管理系统模块化、松耦合；
        未来：多数据模型并存、多计算模式融合、可伸缩调整、新硬件驱动、自适应调优；
    
    历史：“应用软件开发和系统软件研制均以硬件为中心”  --操作系统统一硬件标准接口-->  
          “应用软件开发和系统软件研制以操作系统软件为中心”
    现状：--大数据应用每天产生巨大的数据量-->
          “在以数据为中心的平台上开发新型数据管理系统和应用系统”


##2.数据管理系统的发展历史回顾
    第1代：数据组织与存储
        层次、网状模型，组织与存储
    第2代：OLTP
        关系模型，事务处理子系统、查询优化子系统、数据访问控制子系统
    第3代：OLAP
        CUBE、列存储、OLAP分析前端工具
    第4代：大数据
        分布式可扩展、异地多备份高可用、多数据模型支持、多应用负载类型支持
###2.1 第1代：层次、网状数据库系统
    动机：文件作为数据存储的主要设施,已经无法满足数据项之间的复杂关系管理的需求。
    数据组织和存储：树、（受限）图，"树"的遍历。
    三级模式结构：外模式-模式-内模式。
    第1代系统主要贡献：第一次将数据的存储与访问功能从应用程序逻辑中分离并独立出来。

###2.2 第2代：关系数据库系统
    关系模型简单明了、数学理论基础坚实(基于集合)、操作语言是描述性的
    提高了生产效率：
        ①SELECT (列) FROM (表) WHERE (行) 一个查询就是从一个表中选择出需要的行和列；
        ②确保数据正确，系统代码中大量处理异常的代码；
        ③有各种应用开发工具；
    核心技术：
        查询优化、事务管理

###2.3 第3代：数据仓库系统
    星型模型：
        也称多维模型,就是选定一些属性作为分析的维度,另一些属性作为分析的对象，维属性通常根据值的包含关系会形成一个层次。
        StarSchema=FactTable+DimensionTable，Cube=Dimensions
    CUBE模型、列存储

###2.4 第4代：大数据管理系统
    传统的数据库技术“存不下”、无法建模、无法及时入库等问题凸显,难以满足应用的需要，于是，Google提出了GFS、MapReduce、Bigtable。
    开源：HDFS、Hadoop MapReduce、HBase。
    HBase是基于HDFS+MapReduce的分布式NoSQL数据库。
    后来人们发现：无论从应用程序的继承角度还是提高生产率的角度，SQL都是不可或缺的工具，因此，在上层提供SQL引擎，成为大数据管理系统的共识。


##3.大数据管理系统现状
    关系数据库（关系理论、数据建模、数据独立性高、事务管理、查询优化）仍然是数据管理主流技术，信守"one-size-fits-all"原则。  
    --大数据应用如社交网络、知识图谱、搜索引擎、双十一等使得传统关系数据库已无法满足处理要求-->
    谷歌三件套（GFS、MapReduce、Bigtable）及Hadoop开源生态系统，人们意识到"one-size-does-not-fit-all"，松耦合的大数据管理系统分层结构：大数据存储系统、NoSQL系统、大数据计算系统、大数据查询处理引擎。
###3.1 存储系统
    存取单元数据块大，低版本默认128MB，2.0版本后默认256MB；
    适合一次写入、多次读取；
    数据备份和容错机制；
    问题：
        不适合存储海量小文件：大量块内空间浪费，同时产生大量文件到存储节点映射等元数据，NameNode会成为文件系统存取瓶颈。淘宝的TFS就是为了管理海量小文件应运而生的分布式文件系统。
        HDFS是基于磁盘的分布式文件系统，数据访问频繁I/O影响系统性能。引入分布式缓冲管理系统（如Alluxio、Redis、Memcache），可以屏蔽底层的分布式文件系统，将来自不同文件系统的热点数据尽可能维护在缓冲区中，减少上次计算访问数据带来的I/O开销。

###3.2 面向不同数据模型的NoSQL系统
    数据模型：结构化(关系数据、图数据)、半结构化(XML、JSON数据)、非结构化(多媒体、网页)。
    NoSQL数据库基于键值对、文档、图等不同数据模型，为管理不同类型数据提供了有效的数据存储服务。
    ①键值对：BigTable、HBase(严格一致性)，Dynamo(最终一致性)，Cassandra；
    ②文档：面向文档的系统则依赖于文档中的内部结构；
    ③图：数据结构为标签图(如语义网中RDF、部分知识图谱)和属性图，查询语言为 SPARQL,Cypher和Gremlin；

###3.3 计算系统
    计算模型：
        批计算:MapReduce、Spark
        流计算:Storm、Spark Streaming、Flink、S4、JStorm、Blink
        迭代计算:Giraph、GraphX、Haloop
        交互式计算:Presto、Impala、Drill

###3.4 查询处理引擎
    查询处理引擎为用户和开发者提供类SQL（有些甚至可以兼容SQL）的查询语言，通过语法解析器，把查询语句转换成对计算层的作业调度。
    Hive、Spark SQL、Presto


##4.大数据管理系统的特征
###4.1 大数据管理系统的数据特征
    4V：volume大容量、variety多类型、volocity变化快、veracity低质量。

###4.2 大数据管理系统的系统特征
    5个系统特征：开放、多模型并存、高可用和分布式可扩展、数据完整性检查与维护、知识管理为中心

###4.3 大数据管理系统的应用特征
    以对象为中心进行数据组织，实现数据汇聚（传统以业务为中心，大数据以服务对象为核心，汇聚不同业务数据）；
    以第四范式为解决问题的新模式（实验观察、理论推导、计算机模拟、大数据方法）；
    以机器学习为主要应用类型（OLML online machine learning，即大数据上训练机器学习模型，并进行预测）；


##5.大数据管理系统未来发展展望

